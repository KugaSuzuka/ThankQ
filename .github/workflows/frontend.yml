name: Deploy frontend to S3

on:
  push:
    branches: [ main ]
#    paths: [ "frontend/**" ]        # フロントに変更があるときだけ

env:
  AWS_REGION: ap-northeast-1
  DIST_DIR: frontend/dist           # Next.js: frontend/out
  S3_BUCKET: thankq-frontend-site

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # 1) Node を先にセットアップ
      - uses: actions/setup-node@v4
        with:
          node-version-file: frontend/package.json   # engines.node を参照
          cache: pnpm
          cache-dependency-path: frontend/pnpm-lock.yaml

      # 2) pnpm をインストール
      - uses: pnpm/action-setup@v4                  # v4 が最新
        with:
          package_json_file: frontend/package.json
          run_install: false                        # 依存は後段で

      # 3) 依存インストール & ビルド（frontend ディレクトリ）
      - name: Build frontend
        working-directory: frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm run build

      # 2) AWS (OIDC AssumeRole)
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.CI_FRONTEND_ROLE_ARN }}
          aws-region:     ${{ env.AWS_REGION }}

      # 3) CloudFront ID / バケットパスをまとめて環境変数へ
      - name: Resolve resource IDs
        run: |
          CF_ID=${{ secrets.CLOUDFRONT_ID }}          # 固定値ならこれだけ
          echo "CLOUDFRONT_ID=$CF_ID" >> $GITHUB_ENV
          echo "SYNC_PATH=s3://${S3_BUCKET}" >> $GITHUB_ENV

      # 4) S3 sync
      - name: Upload to S3
        run: |
          aws s3 sync $DIST_DIR/ "$SYNC_PATH" \
            --delete \
            --cache-control "public,max-age=31536000,immutable"

      # 5) CloudFront Invalidate (任意)
      - name: Invalidate CloudFront
        if: env.CLOUDFRONT_ID != ''
        run: |
          aws cloudfront create-invalidation \
            --distribution-id "$CLOUDFRONT_ID" \
            --paths "/*"

      # 6) CDKTF deploy（必要なら）
      - uses: hashicorp/setup-terraform@v3
      - name: CDKTF deploy
        env: { CDKTF_DISABLE_PROMPTS: "true" }
        run: |
          cd cdktf
          pnpm ci
          pnpm cdktf deploy -auto-approve
